{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
/**
 * @var \{{ namespace }}\View\AppView $this
 * @var \{{ entityClass }}[]|\Cake\Collection\CollectionInterface ${{ pluralVar }}
 */
?>
{% set fields = Bake.filterFields(fields, schema, modelObject, indexColumns, ['binary', 'text']) %}

<!--
<nav class="large-3 medium-4 columns" id="actions-sidebar">
    <ul class="side-nav">
        <li class="heading"><?= __('Actions') ?></li>
        <li><?= $this->Html->link(__('New {{ singularHumanName }}'), ['action' => 'add']) ?></li>
{% set done = [] %}
{% for type, data in associations %}
{% for alias, details in data %}
{% if details.navLink and details.controller is not same as(_view.name) and details.controller not in done %}
        <li><?= $this->Html->link(__('List {{ alias|underscore|humanize }}'), ['controller' => '{{ details.controller }}', 'action' => 'index']) ?></li>
        <li><?= $this->Html->link(__('New {{ alias|singularize|underscore|humanize }}'), ['controller' => '{{ details.controller }}', 'action' => 'add']) ?></li>
{% set done = done|merge([details.controller]) %}
{% endif %}
{% endfor %}
{% endfor %}
    </ul>
</nav>
-->

<div class="{{ pluralVar }} index large-9 medium-8 columns content">
    <!-- <h3><?= __('{{ pluralHumanName }}') ?></h3> -->
    <table class="indexTable" cellpadding="0" cellspacing="0">
        <thead>
            <tr>
{% for field in fields %}
                <!--<th scope="col"><?= $this->Paginator->sort('{{ field }}') ?></th>-->
                <th scope="col"><?= "{{ field }}" ?></th>
{% endfor %}
                <th scope="col" class="actions"><?= __('Actions') ?></th>
            </tr>
        </thead>
        <tfoot>
            <tr>
{% for field in fields %}
                <!--<th scope="col"><?= $this->Paginator->sort('{{ field }}') ?></th>-->
                <th scope="col"><?= "{{ field }}" ?></th>
{% endfor %}
                <th scope="col" class="actions"><?= __('Actions') ?></th>
            </tr>
        </tfoot>
        <tbody>
            <?php foreach (${{ pluralVar }} as ${{ singularVar }}): continue; ?>
            <tr>
{% for field in fields %}
{% set isKey = false %}
{% if associations.BelongsTo %}
{% for alias, details in associations.BelongsTo if field == details.foreignKey %}
{% set isKey = true %}
                <td><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
{% endfor %}
{% endif %}
{% if isKey is not same as(true) %}
{% set columnData = Bake.columnData(field, schema) %}
{% if columnData.type not in ['integer', 'float', 'decimal', 'biginteger', 'smallinteger', 'tinyinteger'] %}
                <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
{% else %}
                <td><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
{% endif %}
{% endif %}
{% endfor %}
{% set pk = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
                <td class="actions">
                    <?= $this->Html->link(__('View'), ['action' => 'view', {{ pk|raw }}]) ?>
                    <?= $this->Html->link(__('Edit'), ['action' => 'edit', {{ pk|raw }}]) ?>
                    <?= $this->Form->postLink(__('Delete'), ['action' => 'delete', {{ pk|raw }}], ['confirm' => __('Are you sure you want to delete # {0}?', {{ pk|raw }})]) ?>
                </td>
            </tr>
            <?php endforeach; ?>
        </tbody>
    </table>
</div>

<?php $this->append('script', $this->Html->script(['Fondant.fondant-dt'])); ?>
<?php $this->append('script'); ?>
<script>
$(document).ready(function(){
    $('.indexTable').DataTable({
        "dom" : "Bfrtip",
        "buttons" : [
            'copy', 'csv', 'excel', 'pdf', 'print'
        ],
        "fixedHeader" : true,
        "responsive" : true,
        "processing": true,
        "serverSide": true,
        "ajax": {
            "url": "<?= $this->request->here(); ?>",
            "dataSrc": "{{pluralVar}}"
        },
        "columns": [
{% for field in fields %}
{% set isKey = false %}
{% if associations.BelongsTo %}
{% for alias, details in associations.BelongsTo if field == details.foreignKey %}
{% if isKey is not same as(true) %}
{% set isKey = true %}
                { 
                    "data" : null, 
                    "render": function ( data, type, row, meta ) {
                        if (data.{{ details.property }} == null) {
                            retval="";
                        }else{
                            retval="<a href='{{ details.controller }}/view/"+data.{{ details.property }}.{{ details.primaryKey[0] }}+"'>"+data.{{ details.property }}.{{ details.displayField }}+"</a>";

                        }
                        return retval;
                    }
                },
{% endif %}
{% endfor %}
{% endif %}
{% if isKey is not same as(true) %}
                { "data" : "{{field}}" },
{% endif %}
{% endfor %}
                { "data" : "id" }
        ]
    });
});
</script>
<?php $this->end(); ?>

